/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public void getTwoSum(ListNode a, ListNode b, int rem) {

        ListNode remNode = new ListNode(0);

        int result = a.val + b.val + rem;
        rem = result / 10;
        a.val = result % 10;

        if (a.next == null && b.next == null) {
            if (rem != 0) {
                a.next = remNode;
                remNode.val = rem;
            }
            return;
        }

        if (a.next == null || b.next == null) {

            if (a.next == null) {
                a.next = b.next;
            }

            a = a.next;
            while(a != null) {
                result = a.val + rem;
                a.val = result % 10;
                rem = result / 10;
                if (a.next == null && rem != 0) {
                    remNode.val = rem;
                    remNode.next = null;
                    a.next = remNode;
                    a = a.next;
                }
                a = a.next;
            }
            return;
        }

        getTwoSum(a.next,b.next,rem);
    }

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        getTwoSum(l1,l2,0);
        return l1;
    }
}
